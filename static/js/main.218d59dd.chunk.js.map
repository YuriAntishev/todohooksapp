{"version":3,"sources":["forms/AddTaskForm.js","forms/EditTaskForm.js","tables/TaskTable.js","App.js","index.js"],"names":["AddTaskForm","props","initialFormState","id","name","completed","useState","task","setTask","className","onSubmit","event","preventDefault","addTask","type","style","margin","value","onChange","currentTarget","EditTaskForm","currentTask","useEffect","updateTask","target","onClick","setEditing","TaskTable","align","scope","tasks","length","map","key","transform","defaultChecked","handleChange","editRow","deleteTask","colSpan","App","setTasks","editing","setCurrentTask","textAlign","updatedTask","uuidv4","filter","taskId","newTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.218d59dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddTaskForm = props => {\n    const initialFormState = {\n        id: null,\n        name: '',\n        completed: ''\n    }\n    const [task, setTask] = useState(initialFormState)\n\n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget\n        setTask({\n            ...task,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!task.name)\n            return\n\n        props.addTask(task)\n\n        setTask(initialFormState)\n    }\n\n    return (\n        <form\n            className=\"form-inline\"\n            onSubmit={handleSubmit}>\n            <label\n                className=\"mr-sm-2\">\n                Task\n            </label>\n            <input\n                type=\"text\"\n                className=\"form-control mb-2 mr-sm-2\"\n                style={{margin: '5px'}}\n                name=\"name\"\n                value={task.name}\n                onChange={handleInputChange}\n            />\n            <button\n                className=\"btn btn-outline-primary mb-2\"\n                style={{margin: '5px'}}>\n                Add new task\n        </button>\n        </form>\n    )\n}\n\nexport { AddTaskForm }","import React, { useState, useEffect } from 'react'\n\nconst EditTaskForm = props => {\n  const [task, setTask] = useState(props.currentTask)\n\n  useEffect(\n    () => {\n      setTask(props.currentTask)\n    },\n    [props]\n  )\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setTask({ ...task, [name]: value })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (!task.name)\n      return\n    props.updateTask(task.id, task)\n  }\n\n  return (\n    <form \n    className=\"form-inline\"\n    onSubmit={handleSubmit}>\n      <label className=\"mr-sm-2\">Task</label>\n      <input\n        type=\"text\"\n        className=\"form-control mb-2 mr-sm-2\"\n        style={{margin: '5px'}}\n        name=\"name\"\n        value={task.name}\n        onChange={handleInputChange}\n      />\n      <button\n        className=\"btn btn-outline-primary mb-2\"\n        style={{margin: '5px'}}\n        >\n        Update task\n        </button>\n      <button\n        className=\"btn btn-outline-primary mb-2\"\n        onClick={() => props.setEditing(false)}\n        style={{margin: '5px'}}\n      >\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport { EditTaskForm }\n","import React from 'react'\n\nconst TaskTable = props => {\n  return (\n    <table className=\"table table-striped\">\n      <thead align=\"center\">\n        <tr>\n          <th scope=\"col\">Completed</th>\n          <th scope=\"col\">Task</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody align=\"center\">\n        {props.tasks.length > 0 ? (\n          props.tasks.map(task => (\n            <tr key={task.id}>\n              <td className=\"align-middle\">\n                <input\n                  type=\"checkbox\"\n                  style={{ transform: 'scale(1.3)' }}\n                  defaultChecked={task.completed}\n                  onClick={() => {\n                    props.handleChange(task.id)\n                  }\n                  }\n                />\n              </td>\n              <td className=\"align-middle\">\n                {task.completed === true ? (\n                  <del>{task.name}</del>) :\n                  (task.name)}\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-info mb-2\"\n                  style={{ margin: '5px' }}\n                  onClick={() => {\n                    props.editRow(task)\n                  }}\n                >\n                  Edit\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-info mb-2\"\n                  style={{ margin: '5px' }}\n                  onClick={() => props.deleteTask(task.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n            <tr>\n              <td colSpan={3}>No tasks</td>\n            </tr>\n          )}\n      </tbody>\n    </table>\n  )\n}\n\nexport { TaskTable }\n","import React, { useState } from 'react';\nimport { AddTaskForm } from './forms/AddTaskForm';\nimport { EditTaskForm } from './forms/EditTaskForm';\nimport { TaskTable } from './tables/TaskTable';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            name: 'watch movie',\n            completed: false\n        },\n        {\n            id: 2,\n            name: 'drink coca-cola',\n            completed: false\n        },\n        {\n            id: 3,\n            name: 'eat chocolate',\n            completed: false\n        }\n    ])\n\n    const [editing, setEditing] = useState(false)\n\n    const initialFormState = {\n        id: null,\n        name: '',\n        completed: ''\n    }\n\n    const [currentTask, setCurrentTask] = useState(initialFormState)\n\n    const addTask = task => {\n        task.id = uuidv4();\n        setTasks([\n            ...tasks,\n            task\n        ])\n    }\n\n    const deleteTask = id => {\n        setEditing(false)\n        setTasks(tasks.filter(task => task.id !== id))\n    }\n\n    const handleChange = taskId => {\n        const newTask = tasks.map(task => {\n            if (task.id === taskId) {\n                task.completed = !task.completed;\n            }\n            return task;\n        });\n        setTasks(newTask);\n    }\n\n    const updateTask = (id, updatedTask) => {\n        setEditing(false)\n        setTasks(tasks.map(task => (task.id === id\n            ? updatedTask\n            : task)))\n    }\n\n    const editRow = task => {\n        setEditing(true)\n        setCurrentTask({\n            id: task.id,\n            name: task.name,\n            completed: task.completed\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 style={{ textAlign: 'center' }}>Todo Application with Hooks</h1>\n            <div>\n                <div>\n                    {editing\n                        ? (\n                            <div>\n                                <h2>Edit Todo Item</h2>\n                                <EditTaskForm\n                                    editing={editing}\n                                    setEditing={setEditing}\n                                    currentTask={currentTask}\n                                    updateTask={updateTask} />\n                            </div>\n                        )\n                        : (\n                            <div>\n                                <h2>Add Todo Item</h2>\n                                <AddTaskForm\n                                    addTask={addTask} />\n                            </div>\n                        )}\n                </div>\n                <div>\n                    <h2>Todos</h2>\n                    <TaskTable\n                        tasks={tasks}\n                        editRow={editRow}\n                        deleteTask={deleteTask}\n                        handleChange={handleChange}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport { App }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render( < App / > , document.getElementById('root'))"],"sourceRoot":""}